package org.simplilearn.workshop.service;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.util.StringUtils;
import org.springframework.web.multipart.MultipartFile;

public class FileStorageService {

	private Path fileStoragePath;
	private String fileStorageLocation;
	
	public FileStorageService(@Value("${file.storage.location:temp}") String fileStorageLocation) {
		super();
		this.fileStorageLocation = fileStorageLocation;
		fileStoragePath = Paths.get(fileStorageLocation).toAbsolutePath().normalize();
		
		try {
			Files.createDirectories(fileStoragePath);
		}catch (IOException e) {

			e.printStackTrace();
		}
	}
	
	public String storeFile(MultipartFile file) {
		String fileName = StringUtils.cleanPath(file.getOriginalFilename());
		
		Path filePath = Paths.get(fileStoragePath+"\\"+fileName);
		
		try {
			Files.copy(file.getInputStream(), filePath, StandardCopyOption.REPLACE_EXISTING);
		} catch (IOException e) {
			System.out.println("issue is storing the file");
			e.printStackTrace();
		}
		return fileName;
	}
	
	public Resource downloadFile(String fileName) {
		Path path = Paths.get(fileStorageLocation).toAbsolutePath().resolve(fileName);
		
	}
	
}
